/**
 * 
 */
package gg.bayes.challenge.rest.service;

import java.text.ParseException;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import gg.bayes.challenge.persistence.model.CombatLogEntryEntity;
import gg.bayes.challenge.persistence.model.MatchEntity;
import gg.bayes.challenge.persistence.model.CombatLogEntryEntity.Type;
import gg.bayes.challenge.persistence.repository.CombatLogEntryRepository;
import gg.bayes.challenge.persistence.repository.MatchRepository;
import gg.bayes.challenge.rest.utility.MatchUtility;
import lombok.extern.slf4j.Slf4j;

/**
 * @author Jeena A V
 *
 */
@Service
@Slf4j
public class MatchServiceImpl implements MatchService {
	
	private CombatLogEntryRepository entryRepository;
	private MatchRepository	matchRepository;


	public MatchServiceImpl(CombatLogEntryRepository entryRepository
			,MatchRepository matchRepository) {
		this.entryRepository=entryRepository;
		this.matchRepository=matchRepository;
	}

	@Override
	public Long ingestCombatLog(String combatLog) {
		
		List<String> eventList=combatLog.lines()
				.filter(line->!line.isBlank())
				.collect(Collectors.toList());
		
		Set<CombatLogEntryEntity> combatEntry=new HashSet<>();
		
		eventList.stream()
		.forEach(event->
		{ 			
			
				try {
					CombatLogEntryEntity combat=MatchUtility.getCombatEntry(event);
					
					combatEntry.add();
				} catch (ParseException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			
			
			
		}); 
		
		
		MatchEntity match=new MatchEntity();
		//match.setCombatLogEntries(combatEntry);
		//matchRepository.save(match);
		
		
		/*System.out.println("######"+System.currentTimeMillis());
		CombatLogEntryEntity combat1=new CombatLogEntryEntity();
		combat1.setAbility("ability1");
		combat1.setAbilityLevel(2);
		combat1.setActor("actor1");
		combat1.setDamage(2);
		combat1.setItem("item");
		combat1.setTarget("target");
		combat1.setTimestamp(1L);
		combat1.setType(Type.HERO_KILLED);
		Set<CombatLogEntryEntity> combatEntry=new HashSet<>();
		combatEntry.add(combat1);
	
		MatchEntity match=new MatchEntity();
		match.setCombatLogEntries(combatEntry);
		matchRepository.save(match);*/
		match.setCombatLogEntries(combatEntry);
		matchRepository.save(match);
		System.out.println(eventList);
		return match.getId();
	}

}
